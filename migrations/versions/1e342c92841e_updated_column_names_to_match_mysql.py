"""Updated column names to match MySQL

Revision ID: 1e342c92841e
Revises: 76a7f878a73e
Create Date: 2025-03-22 17:47:45.460737

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1e342c92841e'
down_revision = '76a7f878a73e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('serivce_id', sa.Integer(), nullable=False))
        batch_op.drop_column('service_id')

    with op.batch_alter_table('usage_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('usage_date', sa.DateTime(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('data_used',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('messages_sent')
        batch_op.drop_column('call_minutes')
        batch_op.drop_column('date')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', mysql.VARCHAR(length=255), nullable=True))

    with op.batch_alter_table('usage_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('call_minutes', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('messages_sent', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.alter_column('data_used',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.drop_column('usage_date')

    with op.batch_alter_table('service_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('service_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_column('serivce_id')

    # ### end Alembic commands ###
